{
  "x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Food Tracker API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/Clients": {
      "get": {
        "tags": [
          "Clients"
        ],
        "operationId": "Clients_ClientsList",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "Query",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfCoachingRequestDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Clients/{clientId}/diaries/{diaryDate}": {
      "get": {
        "tags": [
          "Clients"
        ],
        "operationId": "Clients_ClientDiary",
        "parameters": [
          {
            "name": "ClientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "DiaryDate",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfCoachingRequestDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Clients/{clientId}": {
      "delete": {
        "tags": [
          "Clients"
        ],
        "operationId": "Clients_StopCoaching",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Clients/requests": {
      "get": {
        "tags": [
          "Clients"
        ],
        "operationId": "Clients_CoachingRequests",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfCoachingRequestDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Clients/requests/{requestId}": {
      "put": {
        "tags": [
          "Clients"
        ],
        "operationId": "Clients_AcceptCoachingRequest",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfCoachingRequestDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Clients"
        ],
        "operationId": "Clients_DeclineCoachingRequest",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfCoachingRequestDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Coaches": {
      "get": {
        "tags": [
          "Coaches"
        ],
        "operationId": "Coaches_Index",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfCoachDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Coaches/{coachId}": {
      "post": {
        "tags": [
          "Coaches"
        ],
        "operationId": "Coaches_CreateCoachingRequest",
        "parameters": [
          {
            "name": "coachId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCoachingRequestCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfCoachDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Coaches"
        ],
        "operationId": "Coaches_DeleteCoachingRequest",
        "parameters": [
          {
            "name": "coachId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfCoachDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Diaries/{date}": {
      "get": {
        "tags": [
          "Diaries"
        ],
        "operationId": "Diaries_Index",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Diaries/{date}/weight": {
      "post": {
        "tags": [
          "Diaries"
        ],
        "operationId": "Diaries_LogWeight",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogWeightCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Diaries/{date}/water": {
      "post": {
        "tags": [
          "Diaries"
        ],
        "operationId": "Diaries_WaterIntake",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogWaterIntakeCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/diaries/{diaryId}/entries": {
      "post": {
        "tags": [
          "DiaryEntries"
        ],
        "operationId": "DiaryEntries_Create",
        "parameters": [
          {
            "name": "diaryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDiaryEntryCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/diaries/{diaryId}/entries/{entryId}": {
      "put": {
        "tags": [
          "DiaryEntries"
        ],
        "operationId": "DiaryEntries_Create2",
        "parameters": [
          {
            "name": "diaryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDiaryEntryCommand"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "DiaryEntries"
        ],
        "operationId": "DiaryEntries_Delete",
        "parameters": [
          {
            "name": "diaryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/_configuration/{clientId}": {
      "get": {
        "tags": [
          "OidcConfiguration"
        ],
        "operationId": "OidcConfiguration_GetClientRequestParameters",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Products": {
      "get": {
        "tags": [
          "Products"
        ],
        "operationId": "Products_Index",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
            "x-position": 2
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfProductDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Products"
        ],
        "operationId": "Products_Create",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Products/{barCode}": {
      "get": {
        "tags": [
          "Products"
        ],
        "operationId": "Products_GetByBarCode",
        "parameters": [
          {
            "name": "barCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Products/{id}": {
      "put": {
        "tags": [
          "Products"
        ],
        "operationId": "Products_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Users/goals": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_Goals",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_SetGoals",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetGoalsCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Users/profile": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_Profile",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "PaginatedListOfCoachingRequestDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CoachingRequestDto"
            }
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "CoachingRequestDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "fromId": {
            "type": "integer",
            "format": "int32"
          },
          "from": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserProfileDto"
              }
            ]
          }
        }
      },
      "UserProfileDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TrainerProfileDto"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "trainer": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/TrainerProfileDto"
                  }
                ]
              }
            }
          }
        ]
      },
      "TrainerProfileDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "startingWeight": {
            "type": "number",
            "format": "double"
          },
          "weightGoal": {
            "type": "number",
            "format": "double"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedListOfCoachDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CoachDto"
            }
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "CoachDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "numberOfClients": {
            "type": "integer",
            "format": "int32"
          },
          "coachingRequested": {
            "type": "boolean"
          }
        }
      },
      "CreateCoachingRequestCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "coachId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DiaryDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "isCompleted": {
            "type": "boolean"
          },
          "entries": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DiaryEntryDto"
            }
          },
          "userGoals": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserGoalsDto"
              }
            ]
          },
          "waterIntake": {
            "type": "number",
            "format": "double"
          },
          "weight": {
            "type": "number",
            "format": "double"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DiaryEntryDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "diaryId": {
            "type": "integer",
            "format": "int32"
          },
          "timeLogged": {
            "type": "string",
            "format": "date-time"
          },
          "product": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProductDto"
              }
            ]
          },
          "servingId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "waterIntake": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "numberOfServings": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "entryType": {
            "$ref": "#/components/schemas/DiaryEntryType"
          },
          "diarySection": {
            "$ref": "#/components/schemas/DiarySection"
          }
        }
      },
      "ProductDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "complete": {
            "type": "boolean"
          },
          "barCode": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "servings": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProductServingDto"
            }
          }
        }
      },
      "ProductServingDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "servingSize": {
            "type": "number",
            "format": "double"
          },
          "servingSizeUnit": {
            "type": "string",
            "nullable": true
          },
          "calories": {
            "type": "number",
            "format": "double"
          },
          "protein": {
            "type": "number",
            "format": "double"
          },
          "carbohydrates": {
            "type": "number",
            "format": "double"
          },
          "fats": {
            "type": "number",
            "format": "double"
          },
          "fiber": {
            "type": "number",
            "format": "double"
          },
          "sodium": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "DiaryEntryType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Food",
          "Water"
        ],
        "enum": [
          0,
          1
        ]
      },
      "DiarySection": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Breakfast",
          "Lunch",
          "Dinner"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "UserGoalsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "caloriesGoal": {
            "type": "number",
            "format": "double"
          },
          "proteinGoal": {
            "type": "number",
            "format": "double"
          },
          "carbohydratesGoal": {
            "type": "number",
            "format": "double"
          },
          "fatsGoal": {
            "type": "number",
            "format": "double"
          },
          "waterGoal": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "LogWeightCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "weight": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "LogWaterIntakeCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "CreateDiaryEntryCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "entry": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DiaryEntryDto"
              }
            ]
          }
        }
      },
      "UpdateDiaryEntryCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "servingId": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfServings": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PaginatedListOfProductDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProductDto"
            }
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "CreateProductCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "barCode": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "servings": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProductServingDto"
            }
          }
        }
      },
      "UpdateProductCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "barCode": {
            "type": "string",
            "nullable": true
          },
          "calories": {
            "type": "integer",
            "format": "int32"
          },
          "protein": {
            "type": "number",
            "format": "double"
          },
          "carbohydrates": {
            "type": "number",
            "format": "double"
          },
          "fats": {
            "type": "number",
            "format": "double"
          },
          "sodium": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "SetGoalsCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "goals": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserGoalsDto"
              }
            ]
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "Type into the textbox: Bearer {your JWT token}.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}